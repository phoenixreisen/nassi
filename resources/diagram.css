html {
  /* Scale size */
  font-size: 30px;
}

.diagram {
  width: fit-content;
}

.statement {
  display: grid;
  justify-items: stretch;
  align-items: stretch;
}

.statement > .block:first-child, 
.statement > .while:first-child, 
.statement > .for:first-child, 
.statement > .until:first-child, 
.statement > .branching:first-child {
  border-top: none;
}

.statement > .block,
.statement > .while,
.statement > .for,
.statement > .until,
.statement > .branching {
  border-right: none;
  border-left: none;
}

.statement > .block:last-child,
.statement > .while:last-child,
.statement > .for:last-child,
.statement > .until:last-child,
.statement > .branching:last-child {
  border-bottom: none;
}

.block + .block,
.while + .while, .block + .while, .while + .block,
.for + .for, .for + .block, .block + .for, .for + .while, .while + .for,
.until + .until, .until + .block, .block + .until, .until + .while, .while +
.until, .until + .for, .for + .until,
.branching + .branching, .branching + .block, .block + .branching, .braching +
.while, .while + .branchin, .branching + .for, .for + .branching, .branching +
.until, .until + .branching {
  border-top: none;
}

.expression-text {
  padding: 0.5rem;
}

.block {
  padding: 0.5rem;
  border: var(--border-thickness) solid black;
}

:root {
  --border-thickness: 0.07rem;
}

.for, .while {
  display: grid;
  border: var(--border-thickness) solid black;
  grid-template-columns: 2.5rem auto;
  grid-template-rows: auto auto;
}

.for > .expression,
.while > .expression {
  grid-column: 1/3;
  grid-row: 1/2;
}

.for > .statement,
.while > .statement {
  grid-column: 2/3;
  grid-row: 2/3;

  border-top: var(--border-thickness) solid black;
  border-left: var(--border-thickness) solid black;
}

.until {
  display: grid;
  grid-template-columns: 2.5rem auto;
  grid-template-rows: auto auto;

  border: var(--border-thickness) solid black;
}

.until > .expression {
  grid-column: 1/3;
  grid-row: 2/3;
}

.until > .statement {
  grid-column: 2/3;
  grid-row: 1/2;

  border-bottom: var(--border-thickness) solid black;
  border-left: var(--border-thickness) solid black;
}

.branching {
  display: grid;
  grid-template-rows: auto auto auto;
  grid-auto-flow: column;

  border: var(--border-thickness) solid black;
}

.branching > .expression {
  grid-column: 1 / 100;
  text-align: center;
  border-bottom: var(--border-thickness) solid black;
}

.branch, .default-branch {
  display: grid;
  grid-template-rows: subgrid;
  grid-row: 2/4;
}

.branch > .expression {
  border-right: var(--border-thickness) solid black;
}

.branch > .expression:before {
  float: right;
  width: 2.5rem;
  height: 1rem;
  content: '';
  background: black;
  clip-path: polygon(0 0, 100% 0, 100% 100%);
  shape-outside: polygon(0 0, 100% 0, 100% 100%);
}

.default-branch > .expression:before {
  float: left;
  width: 2.5rem;
  height: 1rem;
  content: '';
  background: black;
  clip-path: polygon(0 0, 100% 0, 0 100%);
  shape-outside: polygon(0 0, 100% 0, 0 100%);
}

.default-branch > .expression > .expression-text {
  text-align: right;
}

.branch > .statement {
  border-right: var(--border-thickness) solid black;
}

.branch > .statement,
.default-branch > .statement {
  border-top: var(--border-thickness) solid black;
}